!function(t,e){"function"==typeof define&&define.amd?define([],e):t.Gradient=e()}(this,function(){var t,e,n;return function(o){function i(t,e){return b.call(t,e)}function r(t,e){var n,o,i,r,s,l,a,c,d,h,u,p,m=e&&e.split("/"),g=w.map,f=g&&g["*"]||{};if(t){for(t=t.split("/"),s=t.length-1,w.nodeIdCompat&&C.test(t[s])&&(t[s]=t[s].replace(C,"")),"."===t[0].charAt(0)&&m&&(p=m.slice(0,m.length-1),t=p.concat(t)),d=0;d<t.length;d++)if(u=t[d],"."===u)t.splice(d,1),d-=1;else if(".."===u){if(0===d||1===d&&".."===t[2]||".."===t[d-1])continue;d>0&&(t.splice(d-1,2),d-=2)}t=t.join("/")}if((m||f)&&g){for(n=t.split("/"),d=n.length;d>0;d-=1){if(o=n.slice(0,d).join("/"),m)for(h=m.length;h>0;h-=1)if(i=g[m.slice(0,h).join("/")],i&&(i=i[o])){r=i,l=d;break}if(r)break;!a&&f&&f[o]&&(a=f[o],c=d)}!r&&a&&(r=a,l=c),r&&(n.splice(0,l,r),t=n.join("/"))}return t}function s(t,e){return function(){var n=S.call(arguments,0);return"string"!=typeof n[0]&&1===n.length&&n.push(null),m.apply(o,n.concat([t,e]))}}function l(t){return function(e){return r(e,t)}}function a(t){return function(e){v[t]=e}}function c(t){if(i(y,t)){var e=y[t];delete y[t],E[t]=!0,p.apply(o,e)}if(!i(v,t)&&!i(E,t))throw new Error("No "+t);return v[t]}function d(t){var e,n=t?t.indexOf("!"):-1;return n>-1&&(e=t.substring(0,n),t=t.substring(n+1,t.length)),[e,t]}function h(t){return t?d(t):[]}function u(t){return function(){return w&&w.config&&w.config[t]||{}}}var p,m,g,f,v={},y={},w={},E={},b=Object.prototype.hasOwnProperty,S=[].slice,C=/\.js$/;g=function(t,e){var n,o=d(t),i=o[0],s=e[1];return t=o[1],i&&(i=r(i,s),n=c(i)),i?t=n&&n.normalize?n.normalize(t,l(s)):r(t,s):(t=r(t,s),o=d(t),i=o[0],t=o[1],i&&(n=c(i))),{f:i?i+"!"+t:t,n:t,pr:i,p:n}},f={require:function(t){return s(t)},exports:function(t){var e=v[t];return"undefined"!=typeof e?e:v[t]={}},module:function(t){return{id:t,uri:"",exports:v[t],config:u(t)}}},p=function(t,e,n,r){var l,d,u,p,m,w,b,S=[],C=typeof n;if(r=r||t,w=h(r),"undefined"===C||"function"===C){for(e=!e.length&&n.length?["require","exports","module"]:e,m=0;m<e.length;m+=1)if(p=g(e[m],w),d=p.f,"require"===d)S[m]=f.require(t);else if("exports"===d)S[m]=f.exports(t),b=!0;else if("module"===d)l=S[m]=f.module(t);else if(i(v,d)||i(y,d)||i(E,d))S[m]=c(d);else{if(!p.p)throw new Error(t+" missing "+d);p.p.load(p.n,s(r,!0),a(d),{}),S[m]=v[d]}u=n?n.apply(v[t],S):void 0,t&&(l&&l.exports!==o&&l.exports!==v[t]?v[t]=l.exports:u===o&&b||(v[t]=u))}else t&&(v[t]=n)},t=e=m=function(t,e,n,i,r){if("string"==typeof t)return f[t]?f[t](e):c(g(t,h(e)).f);if(!t.splice){if(w=t,w.deps&&m(w.deps,w.callback),!e)return;e.splice?(t=e,e=n,n=null):t=o}return e=e||function(){},"function"==typeof n&&(n=i,i=r),i?p(o,t,e,n):setTimeout(function(){p(o,t,e,n)},4),m},m.config=function(t){return m(t)},t._defined=v,n=function(t,e,n){if("string"!=typeof t)throw new Error("See almond README: incorrect module build, no module name");e.splice||(n=e,e=[]),i(v,t)||i(y,t)||(y[t]=[t,e,n])},n.amd={jQuery:!0}}(),n("almond",function(){}),n("jscolor",[],function(){var t={register:function(){t.attachDOMReadyEvent(t.init),t.attachEvent(document,"mousedown",t.onDocumentMouseDown),t.attachEvent(document,"touchstart",t.onDocumentTouchStart),t.attachEvent(window,"resize",t.onWindowResize)},init:function(){t.jscolor.lookupClass&&t.jscolor.installByClassName(t.jscolor.lookupClass)},tryInstallOnElements:function(e,n){for(var o=new RegExp("(^|\\s)("+n+")(\\s*(\\{[^}]*\\})|\\s|$)","i"),i=0;i<e.length;i+=1)if(void 0===e[i].type||"color"!=e[i].type.toLowerCase()||!t.isColorAttrSupported){var r;if(!e[i].jscolor&&e[i].className&&(r=e[i].className.match(o))){var s=e[i],l=null,a=t.getDataAttr(s,"jscolor");null!==a?l=a:r[4]&&(l=r[4]);var c={};if(l)try{c=new Function("return ("+l+")")()}catch(e){t.warn("Error parsing jscolor options: "+e+":\n"+l)}s.jscolor=new t.jscolor(s,c)}}},isColorAttrSupported:function(){var t=document.createElement("input");return!(!t.setAttribute||(t.setAttribute("type","color"),"color"!=t.type.toLowerCase()))}(),isCanvasSupported:function(){var t=document.createElement("canvas");return!(!t.getContext||!t.getContext("2d"))}(),fetchElement:function(t){return"string"==typeof t?document.getElementById(t):t},isElementType:function(t,e){return t.nodeName.toLowerCase()===e.toLowerCase()},getDataAttr:function(t,e){var n="data-"+e,o=t.getAttribute(n);return null!==o?o:null},attachEvent:function(t,e,n){t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent&&t.attachEvent("on"+e,n)},detachEvent:function(t,e,n){t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent&&t.detachEvent("on"+e,n)},_attachedGroupEvents:{},attachGroupEvent:function(e,n,o,i){t._attachedGroupEvents.hasOwnProperty(e)||(t._attachedGroupEvents[e]=[]),t._attachedGroupEvents[e].push([n,o,i]),t.attachEvent(n,o,i)},detachGroupEvents:function(e){if(t._attachedGroupEvents.hasOwnProperty(e)){for(var n=0;n<t._attachedGroupEvents[e].length;n+=1){var o=t._attachedGroupEvents[e][n];t.detachEvent(o[0],o[1],o[2])}delete t._attachedGroupEvents[e]}},attachDOMReadyEvent:function(t){var e=!1,n=function(){e||(e=!0,t())};if("complete"===document.readyState)return void setTimeout(n,1);if(document.addEventListener)document.addEventListener("DOMContentLoaded",n,!1),window.addEventListener("load",n,!1);else if(document.attachEvent&&(document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&(document.detachEvent("onreadystatechange",arguments.callee),n())}),window.attachEvent("onload",n),document.documentElement.doScroll&&window==window.top)){var o=function(){if(document.body)try{document.documentElement.doScroll("left"),n()}catch(t){setTimeout(o,1)}};o()}},warn:function(t){window.console&&window.console.warn&&window.console.warn(t)},preventDefault:function(t){t.preventDefault&&t.preventDefault(),t.returnValue=!1},captureTarget:function(e){e.setCapture&&(t._capturedTarget=e,t._capturedTarget.setCapture())},releaseTarget:function(){t._capturedTarget&&(t._capturedTarget.releaseCapture(),t._capturedTarget=null)},fireEvent:function(t,e){if(t)if(document.createEvent){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}else if(document.createEventObject){var n=document.createEventObject();t.fireEvent("on"+e,n)}else t["on"+e]&&t["on"+e]()},classNameToList:function(t){return t.replace(/^\s+|\s+$/g,"").split(/\s+/)},hasClass:function(t,e){return!!e&&-1!=(" "+t.className.replace(/\s+/g," ")+" ").indexOf(" "+e+" ")},setClass:function(e,n){for(var o=t.classNameToList(n),i=0;i<o.length;i+=1)t.hasClass(e,o[i])||(e.className+=(e.className?" ":"")+o[i])},unsetClass:function(e,n){for(var o=t.classNameToList(n),i=0;i<o.length;i+=1){var r=new RegExp("^\\s*"+o[i]+"\\s*|\\s*"+o[i]+"\\s*$|\\s+"+o[i]+"(\\s+)","g");e.className=e.className.replace(r,"$1")}},getStyle:function(t){return window.getComputedStyle?window.getComputedStyle(t):t.currentStyle},setStyle:function(){var t=document.createElement("div"),e=function(e){for(var n=0;n<e.length;n+=1)if(e[n]in t.style)return e[n]},n={borderRadius:e(["borderRadius","MozBorderRadius","webkitBorderRadius"]),boxShadow:e(["boxShadow","MozBoxShadow","webkitBoxShadow"])};return function(t,e,o){switch(e.toLowerCase()){case"opacity":var i=Math.round(100*parseFloat(o));t.style.opacity=o,t.style.filter="alpha(opacity="+i+")";break;default:t.style[n[e]]=o}}}(),setBorderRadius:function(e,n){t.setStyle(e,"borderRadius",n||"0")},setBoxShadow:function(e,n){t.setStyle(e,"boxShadow",n||"none")},getElementPos:function(e,n){var o=0,i=0,r=e.getBoundingClientRect();if(o=r.left,i=r.top,!n){var s=t.getViewPos();o+=s[0],i+=s[1]}return[o,i]},getElementSize:function(t){return[t.offsetWidth,t.offsetHeight]},getAbsPointerPos:function(t){t||(t=window.event);var e=0,n=0;return"undefined"!=typeof t.changedTouches&&t.changedTouches.length?(e=t.changedTouches[0].clientX,n=t.changedTouches[0].clientY):"number"==typeof t.clientX&&(e=t.clientX,n=t.clientY),{x:e,y:n}},getRelPointerPos:function(t){t||(t=window.event);var e=t.target||t.srcElement,n=e.getBoundingClientRect(),o=0,i=0,r=0,s=0;return"undefined"!=typeof t.changedTouches&&t.changedTouches.length?(r=t.changedTouches[0].clientX,s=t.changedTouches[0].clientY):"number"==typeof t.clientX&&(r=t.clientX,s=t.clientY),o=r-n.left,i=s-n.top,{x:o,y:i}},getViewPos:function(){var t=document.documentElement;return[(window.pageXOffset||t.scrollLeft)-(t.clientLeft||0),(window.pageYOffset||t.scrollTop)-(t.clientTop||0)]},getViewSize:function(){var t=document.documentElement;return[window.innerWidth||t.clientWidth,window.innerHeight||t.clientHeight]},redrawPosition:function(){if(t.picker&&t.picker.owner){var e,n,o=t.picker.owner;o.fixed?(e=t.getElementPos(o.targetElement,!0),n=[0,0]):(e=t.getElementPos(o.targetElement),n=t.getViewPos());var i,r,s,l=t.getElementSize(o.targetElement),a=t.getViewSize(),c=t.getPickerOuterDims(o);switch(o.position.toLowerCase()){case"left":i=1,r=0,s=-1;break;case"right":i=1,r=0,s=1;break;case"top":i=0,r=1,s=-1;break;default:i=0,r=1,s=1}var d=(l[r]+c[r])/2;if(o.smartPosition)var h=[-n[i]+e[i]+c[i]>a[i]&&-n[i]+e[i]+l[i]/2>a[i]/2&&e[i]+l[i]-c[i]>=0?e[i]+l[i]-c[i]:e[i],-n[r]+e[r]+l[r]+c[r]-d+d*s>a[r]?-n[r]+e[r]+l[r]/2>a[r]/2&&e[r]+l[r]-d-d*s>=0?e[r]+l[r]-d-d*s:e[r]+l[r]-d+d*s:e[r]+l[r]-d+d*s>=0?e[r]+l[r]-d+d*s:e[r]+l[r]-d-d*s];else var h=[e[i],e[r]+l[r]-d+d*s];var u=h[i],p=h[r],m=o.fixed?"fixed":"absolute",g=(h[0]+c[0]>e[0]||h[0]<e[0]+l[0])&&h[1]+c[1]<e[1]+l[1];t._drawPosition(o,u,p,m,g)}},_drawPosition:function(e,n,o,i,r){var s=r?0:e.shadowBlur;t.picker.wrap.style.position=i,t.picker.wrap.style.left=n+"px",t.picker.wrap.style.top=o+"px",t.setBoxShadow(t.picker.boxS,e.shadow?new t.BoxShadow(0,s,e.shadowBlur,0,e.shadowColor):null)},getPickerDims:function(e){var n=!!t.getSliderComponent(e),o=[2*e.insetWidth+2*e.padding+e.width+(n?2*e.insetWidth+t.getPadToSliderPadding(e)+e.sliderSize:0),2*e.insetWidth+2*e.padding+e.height+(e.closable?2*e.insetWidth+e.padding+e.buttonHeight:0)];return o},getPickerOuterDims:function(e){var n=t.getPickerDims(e);return[n[0]+2*e.borderWidth,n[1]+2*e.borderWidth]},getPadToSliderPadding:function(t){return Math.max(t.padding,1.5*(2*t.pointerBorderWidth+t.pointerThickness))},getPadYComponent:function(t){switch(t.mode.charAt(1).toLowerCase()){case"v":return"v"}return"s"},getSliderComponent:function(t){if(t.mode.length>2)switch(t.mode.charAt(2).toLowerCase()){case"s":return"s";case"v":return"v"}return null},onDocumentMouseDown:function(e){e||(e=window.event);var n=e.target||e.srcElement;n._jscLinkedInstance?n._jscLinkedInstance.showOnClick&&n._jscLinkedInstance.show():n._jscControlName?t.onControlPointerStart(e,n,n._jscControlName,"mouse"):t.picker&&t.picker.owner&&t.picker.owner.hide()},onDocumentTouchStart:function(e){e||(e=window.event);var n=e.target||e.srcElement;n._jscLinkedInstance?n._jscLinkedInstance.showOnClick&&n._jscLinkedInstance.show():n._jscControlName?t.onControlPointerStart(e,n,n._jscControlName,"touch"):t.picker&&t.picker.owner&&t.picker.owner.hide()},onWindowResize:function(e){t.redrawPosition()},onParentScroll:function(e){t.picker&&t.picker.owner&&t.picker.owner.hide()},_pointerMoveEvent:{mouse:"mousemove",touch:"touchmove"},_pointerEndEvent:{mouse:"mouseup",touch:"touchend"},_pointerOrigin:null,_capturedTarget:null,onControlPointerStart:function(e,n,o,i){var r=n._jscInstance;t.preventDefault(e),t.captureTarget(n);var s=function(r,s){t.attachGroupEvent("drag",r,t._pointerMoveEvent[i],t.onDocumentPointerMove(e,n,o,i,s)),t.attachGroupEvent("drag",r,t._pointerEndEvent[i],t.onDocumentPointerEnd(e,n,o,i))};if(s(document,[0,0]),window.parent&&window.frameElement){var l=window.frameElement.getBoundingClientRect(),a=[-l.left,-l.top];s(window.parent.window.document,a)}var c=t.getAbsPointerPos(e),d=t.getRelPointerPos(e);switch(t._pointerOrigin={x:c.x-d.x,y:c.y-d.y},o){case"pad":switch(t.getSliderComponent(r)){case"s":0===r.hsv[1]&&r.fromHSV(null,100,null);break;case"v":0===r.hsv[2]&&r.fromHSV(null,null,100)}t.setPad(r,e,0,0);break;case"sld":t.setSld(r,e,0)}t.dispatchFineChange(r)},onDocumentPointerMove:function(e,n,o,i,r){return function(e){var i=n._jscInstance;switch(o){case"pad":e||(e=window.event),t.setPad(i,e,r[0],r[1]),t.dispatchFineChange(i);break;case"sld":e||(e=window.event),t.setSld(i,e,r[1]),t.dispatchFineChange(i)}}},onDocumentPointerEnd:function(e,n,o,i){return function(e){var o=n._jscInstance;t.detachGroupEvents("drag"),t.releaseTarget(),t.dispatchChange(o)}},dispatchChange:function(e){e.valueElement&&t.isElementType(e.valueElement,"input")&&t.fireEvent(e.valueElement,"change")},dispatchFineChange:function(t){if(t.onFineChange){var e;e="string"==typeof t.onFineChange?new Function(t.onFineChange):t.onFineChange,e.call(t)}},setPad:function(e,n,o,i){var r=t.getAbsPointerPos(n),s=o+r.x-t._pointerOrigin.x-e.padding-e.insetWidth,l=i+r.y-t._pointerOrigin.y-e.padding-e.insetWidth,a=s*(360/(e.width-1)),c=100-l*(100/(e.height-1));switch(t.getPadYComponent(e)){case"s":e.fromHSV(a,c,null,t.leaveSld);break;case"v":e.fromHSV(a,null,c,t.leaveSld)}},setSld:function(e,n,o){var i=t.getAbsPointerPos(n),r=o+i.y-t._pointerOrigin.y-e.padding-e.insetWidth,s=100-r*(100/(e.height-1));switch(t.getSliderComponent(e)){case"s":e.fromHSV(null,s,null,t.leavePad);break;case"v":e.fromHSV(null,null,s,t.leavePad)}},_vmlNS:"jsc_vml_",_vmlCSS:"jsc_vml_css_",_vmlReady:!1,initVML:function(){if(!t._vmlReady){var e=document;if(e.namespaces[t._vmlNS]||e.namespaces.add(t._vmlNS,"urn:schemas-microsoft-com:vml"),!e.styleSheets[t._vmlCSS]){var n=["shape","shapetype","group","background","path","formulas","handles","fill","stroke","shadow","textbox","textpath","imagedata","line","polyline","curve","rect","roundrect","oval","arc","image"],o=e.createStyleSheet();o.owningElement.id=t._vmlCSS;for(var i=0;i<n.length;i+=1)o.addRule(t._vmlNS+"\\:"+n[i],"behavior:url(#default#VML);")}t._vmlReady=!0}},createPalette:function(){var e={elm:null,draw:null};if(t.isCanvasSupported){var n=document.createElement("canvas"),o=n.getContext("2d"),i=function(t,e,i){n.width=t,n.height=e,o.clearRect(0,0,n.width,n.height);var r=o.createLinearGradient(0,0,n.width,0);r.addColorStop(0,"#F00"),r.addColorStop(1/6,"#FF0"),r.addColorStop(2/6,"#0F0"),r.addColorStop(.5,"#0FF"),r.addColorStop(4/6,"#00F"),r.addColorStop(5/6,"#F0F"),r.addColorStop(1,"#F00"),o.fillStyle=r,o.fillRect(0,0,n.width,n.height);var s=o.createLinearGradient(0,0,0,n.height);switch(i.toLowerCase()){case"s":s.addColorStop(0,"rgba(255,255,255,0)"),s.addColorStop(1,"rgba(255,255,255,1)");break;case"v":s.addColorStop(0,"rgba(0,0,0,0)"),s.addColorStop(1,"rgba(0,0,0,1)")}o.fillStyle=s,o.fillRect(0,0,n.width,n.height)};e.elm=n,e.draw=i}else{t.initVML();var r=document.createElement("div");r.style.position="relative",r.style.overflow="hidden";var s=document.createElement(t._vmlNS+":fill");s.type="gradient",s.method="linear",s.angle="90",s.colors="16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0";var l=document.createElement(t._vmlNS+":rect");l.style.position="absolute",l.style.left="-1px",l.style.top="-1px",l.stroked=!1,l.appendChild(s),r.appendChild(l);var a=document.createElement(t._vmlNS+":fill");a.type="gradient",a.method="linear",a.angle="180",a.opacity="0";var c=document.createElement(t._vmlNS+":rect");c.style.position="absolute",c.style.left="-1px",c.style.top="-1px",c.stroked=!1,c.appendChild(a),r.appendChild(c);var i=function(t,e,n){switch(r.style.width=t+"px",r.style.height=e+"px",l.style.width=c.style.width=t+1+"px",l.style.height=c.style.height=e+1+"px",s.color="#F00",s.color2="#F00",n.toLowerCase()){case"s":a.color=a.color2="#FFF";break;case"v":a.color=a.color2="#000"}};e.elm=r,e.draw=i}return e},createSliderGradient:function(){var e={elm:null,draw:null};if(t.isCanvasSupported){var n=document.createElement("canvas"),o=n.getContext("2d"),i=function(t,e,i,r){n.width=t,n.height=e,o.clearRect(0,0,n.width,n.height);var s=o.createLinearGradient(0,0,0,n.height);s.addColorStop(0,i),s.addColorStop(1,r),o.fillStyle=s,o.fillRect(0,0,n.width,n.height)};e.elm=n,e.draw=i}else{t.initVML();var r=document.createElement("div");r.style.position="relative",r.style.overflow="hidden";var s=document.createElement(t._vmlNS+":fill");s.type="gradient",s.method="linear",s.angle="180";var l=document.createElement(t._vmlNS+":rect");l.style.position="absolute",l.style.left="-1px",l.style.top="-1px",l.stroked=!1,l.appendChild(s),r.appendChild(l);var i=function(t,e,n,o){r.style.width=t+"px",r.style.height=e+"px",l.style.width=t+1+"px",l.style.height=e+1+"px",s.color=n,s.color2=o};e.elm=r,e.draw=i}return e},leaveValue:1,leaveStyle:2,leavePad:4,leaveSld:8,BoxShadow:function(){var t=function(t,e,n,o,i,r){this.hShadow=t,this.vShadow=e,this.blur=n,this.spread=o,this.color=i,this.inset=!!r};return t.prototype.toString=function(){var t=[Math.round(this.hShadow)+"px",Math.round(this.vShadow)+"px",Math.round(this.blur)+"px",Math.round(this.spread)+"px",this.color];return this.inset&&t.push("inset"),t.join(" ")},t}(),jscolor:function(e,n){function o(t,e,n){t/=255,e/=255,n/=255;var o=Math.min(Math.min(t,e),n),i=Math.max(Math.max(t,e),n),r=i-o;if(0===r)return[null,0,100*i];var s=t===o?3+(n-e)/r:e===o?5+(t-n)/r:1+(e-t)/r;return[60*(6===s?0:s),100*(r/i),100*i]}function i(t,e,n){var o=255*(n/100);if(null===t)return[o,o,o];t/=60,e/=100;var i=Math.floor(t),r=i%2?t-i:1-(t-i),s=o*(1-e),l=o*(1-e*r);switch(i){case 6:case 0:return[o,l,s];case 1:return[l,o,s];case 2:return[s,o,l];case 3:return[s,l,o];case 4:return[l,s,o];case 5:return[o,s,l]}}function r(){t.unsetClass(m.targetElement,m.activeClass),t.picker.wrap.parentNode.removeChild(t.picker.wrap),delete t.picker.owner}function s(){function e(){var t=m.insetColor.split(/\s+/),e=t.length<2?t[0]:t[1]+" "+t[0]+" "+t[0]+" "+t[1];n.btn.style.borderColor=e}m._processParentElementsInDOM(),t.picker||(t.picker={owner:null,wrap:document.createElement("div"),box:document.createElement("div"),boxS:document.createElement("div"),boxB:document.createElement("div"),pad:document.createElement("div"),padB:document.createElement("div"),padM:document.createElement("div"),padPal:t.createPalette(),cross:document.createElement("div"),crossBY:document.createElement("div"),crossBX:document.createElement("div"),crossLY:document.createElement("div"),crossLX:document.createElement("div"),sld:document.createElement("div"),sldB:document.createElement("div"),sldM:document.createElement("div"),sldGrad:t.createSliderGradient(),sldPtrS:document.createElement("div"),sldPtrIB:document.createElement("div"),sldPtrMB:document.createElement("div"),sldPtrOB:document.createElement("div"),btn:document.createElement("div"),btnT:document.createElement("span")},t.picker.pad.appendChild(t.picker.padPal.elm),t.picker.padB.appendChild(t.picker.pad),t.picker.cross.appendChild(t.picker.crossBY),t.picker.cross.appendChild(t.picker.crossBX),t.picker.cross.appendChild(t.picker.crossLY),t.picker.cross.appendChild(t.picker.crossLX),t.picker.padB.appendChild(t.picker.cross),t.picker.box.appendChild(t.picker.padB),t.picker.box.appendChild(t.picker.padM),t.picker.sld.appendChild(t.picker.sldGrad.elm),t.picker.sldB.appendChild(t.picker.sld),t.picker.sldB.appendChild(t.picker.sldPtrOB),t.picker.sldPtrOB.appendChild(t.picker.sldPtrMB),t.picker.sldPtrMB.appendChild(t.picker.sldPtrIB),t.picker.sldPtrIB.appendChild(t.picker.sldPtrS),t.picker.box.appendChild(t.picker.sldB),t.picker.box.appendChild(t.picker.sldM),t.picker.btn.appendChild(t.picker.btnT),t.picker.box.appendChild(t.picker.btn),t.picker.boxB.appendChild(t.picker.box),t.picker.wrap.appendChild(t.picker.boxS),t.picker.wrap.appendChild(t.picker.boxB));var n=t.picker,o=!!t.getSliderComponent(m),i=t.getPickerDims(m),r=2*m.pointerBorderWidth+m.pointerThickness+2*m.crossSize,s=t.getPadToSliderPadding(m),c=Math.min(m.borderRadius,Math.round(m.padding*Math.PI)),d="crosshair";n.wrap.style.clear="both",n.wrap.style.width=i[0]+2*m.borderWidth+"px",n.wrap.style.height=i[1]+2*m.borderWidth+"px",n.wrap.style.zIndex=m.zIndex,n.box.style.width=i[0]+"px",n.box.style.height=i[1]+"px",n.boxS.style.position="absolute",n.boxS.style.left="0",n.boxS.style.top="0",n.boxS.style.width="100%",n.boxS.style.height="100%",t.setBorderRadius(n.boxS,c+"px"),n.boxB.style.position="relative",n.boxB.style.border=m.borderWidth+"px solid",n.boxB.style.borderColor=m.borderColor,n.boxB.style.background=m.backgroundColor,t.setBorderRadius(n.boxB,c+"px"),n.padM.style.background=n.sldM.style.background="#FFF",t.setStyle(n.padM,"opacity","0"),t.setStyle(n.sldM,"opacity","0"),n.pad.style.position="relative",n.pad.style.width=m.width+"px",n.pad.style.height=m.height+"px",n.padPal.draw(m.width,m.height,t.getPadYComponent(m)),n.padB.style.position="absolute",n.padB.style.left=m.padding+"px",n.padB.style.top=m.padding+"px",n.padB.style.border=m.insetWidth+"px solid",n.padB.style.borderColor=m.insetColor,n.padM._jscInstance=m,n.padM._jscControlName="pad",n.padM.style.position="absolute",n.padM.style.left="0",n.padM.style.top="0",n.padM.style.width=m.padding+2*m.insetWidth+m.width+s/2+"px",n.padM.style.height=i[1]+"px",n.padM.style.cursor=d,n.cross.style.position="absolute",n.cross.style.left=n.cross.style.top="0",n.cross.style.width=n.cross.style.height=r+"px",n.crossBY.style.position=n.crossBX.style.position="absolute",n.crossBY.style.background=n.crossBX.style.background=m.pointerBorderColor,n.crossBY.style.width=n.crossBX.style.height=2*m.pointerBorderWidth+m.pointerThickness+"px",n.crossBY.style.height=n.crossBX.style.width=r+"px",n.crossBY.style.left=n.crossBX.style.top=Math.floor(r/2)-Math.floor(m.pointerThickness/2)-m.pointerBorderWidth+"px",n.crossBY.style.top=n.crossBX.style.left="0",n.crossLY.style.position=n.crossLX.style.position="absolute",n.crossLY.style.background=n.crossLX.style.background=m.pointerColor,n.crossLY.style.height=n.crossLX.style.width=r-2*m.pointerBorderWidth+"px",n.crossLY.style.width=n.crossLX.style.height=m.pointerThickness+"px",n.crossLY.style.left=n.crossLX.style.top=Math.floor(r/2)-Math.floor(m.pointerThickness/2)+"px",n.crossLY.style.top=n.crossLX.style.left=m.pointerBorderWidth+"px",n.sld.style.overflow="hidden",n.sld.style.width=m.sliderSize+"px",n.sld.style.height=m.height+"px",n.sldGrad.draw(m.sliderSize,m.height,"#000","#000"),n.sldB.style.display=o?"block":"none",n.sldB.style.position="absolute",n.sldB.style.right=m.padding+"px",n.sldB.style.top=m.padding+"px",n.sldB.style.border=m.insetWidth+"px solid",n.sldB.style.borderColor=m.insetColor,n.sldM._jscInstance=m,n.sldM._jscControlName="sld",n.sldM.style.display=o?"block":"none",n.sldM.style.position="absolute",n.sldM.style.right="0",n.sldM.style.top="0",n.sldM.style.width=m.sliderSize+s/2+m.padding+2*m.insetWidth+"px",n.sldM.style.height=i[1]+"px",n.sldM.style.cursor="default",n.sldPtrIB.style.border=n.sldPtrOB.style.border=m.pointerBorderWidth+"px solid "+m.pointerBorderColor,n.sldPtrOB.style.position="absolute",n.sldPtrOB.style.left=-(2*m.pointerBorderWidth+m.pointerThickness)+"px",n.sldPtrOB.style.top="0",n.sldPtrMB.style.border=m.pointerThickness+"px solid "+m.pointerColor,n.sldPtrS.style.width=m.sliderSize+"px",n.sldPtrS.style.height=f+"px",n.btn.style.display=m.closable?"block":"none",n.btn.style.position="absolute",n.btn.style.left=m.padding+"px",n.btn.style.bottom=m.padding+"px",n.btn.style.padding="0 15px",n.btn.style.height=m.buttonHeight+"px",n.btn.style.border=m.insetWidth+"px solid",e(),n.btn.style.color=m.buttonColor,n.btn.style.font="12px sans-serif",n.btn.style.textAlign="center";try{n.btn.style.cursor="pointer"}catch(t){n.btn.style.cursor="hand"}n.btn.onmousedown=function(){m.hide()},n.btnT.style.lineHeight=m.buttonHeight+"px",n.btnT.innerHTML="",n.btnT.appendChild(document.createTextNode(m.closeText)),l(),a(),t.picker.owner&&t.picker.owner!==m&&t.unsetClass(t.picker.owner.targetElement,m.activeClass),t.picker.owner=m,t.isElementType(g,"body")?t.redrawPosition():t._drawPosition(m,0,0,"relative",!1),n.wrap.parentNode!=g&&g.appendChild(n.wrap),t.setClass(m.targetElement,m.activeClass)}function l(){switch(t.getPadYComponent(m)){case"s":var e=1;break;case"v":var e=2}var n=Math.round(m.hsv[0]/360*(m.width-1)),o=Math.round((1-m.hsv[e]/100)*(m.height-1)),r=2*m.pointerBorderWidth+m.pointerThickness+2*m.crossSize,s=-Math.floor(r/2);switch(t.picker.cross.style.left=n+s+"px",t.picker.cross.style.top=o+s+"px",t.getSliderComponent(m)){case"s":var l=i(m.hsv[0],100,m.hsv[2]),a=i(m.hsv[0],0,m.hsv[2]),c="rgb("+Math.round(l[0])+","+Math.round(l[1])+","+Math.round(l[2])+")",d="rgb("+Math.round(a[0])+","+Math.round(a[1])+","+Math.round(a[2])+")";t.picker.sldGrad.draw(m.sliderSize,m.height,c,d);break;case"v":var h=i(m.hsv[0],m.hsv[1],100),c="rgb("+Math.round(h[0])+","+Math.round(h[1])+","+Math.round(h[2])+")",d="#000";t.picker.sldGrad.draw(m.sliderSize,m.height,c,d)}}function a(){var e=t.getSliderComponent(m);if(e){switch(e){case"s":var n=1;break;case"v":var n=2}var o=Math.round((1-m.hsv[n]/100)*(m.height-1));t.picker.sldPtrOB.style.top=o-(2*m.pointerBorderWidth+m.pointerThickness)-Math.floor(f/2)+"px"}}function c(){return t.picker&&t.picker.owner===m}function d(){m.importColor()}this.value=null,this.valueElement=e,this.styleElement=e,this.required=!0,this.refine=!0,this.hash=!1,this.uppercase=!0,this.onFineChange=null,this.activeClass="jscolor-active",this.minS=0,this.maxS=100,this.minV=0,this.maxV=100,this.hsv=[0,0,100],this.rgb=[255,255,255],this.width=181,this.height=101,this.showOnClick=!0,this.mode="HSV",this.position="bottom",this.smartPosition=!0,this.sliderSize=16,this.crossSize=8,this.closable=!1,this.closeText="Close",this.buttonColor="#000000",this.buttonHeight=18,this.padding=12,this.backgroundColor="#FFFFFF",this.borderWidth=1,this.borderColor="#BBBBBB",this.borderRadius=8,this.insetWidth=1,this.insetColor="#BBBBBB",this.shadow=!0,this.shadowBlur=15,this.shadowColor="rgba(0,0,0,0.2)",this.pointerColor="#4C4C4C",this.pointerBorderColor="#FFFFFF",this.pointerBorderWidth=1,this.pointerThickness=2,this.zIndex=1e3,this.container=null;for(var h in n)n.hasOwnProperty(h)&&(this[h]=n[h]);if(this.hide=function(){c()&&r()},this.show=function(){s()},this.redraw=function(){c()&&s()},this.importColor=function(){this.valueElement&&t.isElementType(this.valueElement,"input")?this.refine?!this.required&&/^\s*$/.test(this.valueElement.value)?(this.valueElement.value="",this.styleElement&&(this.styleElement.style.backgroundImage=this.styleElement._jscOrigStyle.backgroundImage,this.styleElement.style.backgroundColor=this.styleElement._jscOrigStyle.backgroundColor,this.styleElement.style.color=this.styleElement._jscOrigStyle.color),this.exportColor(t.leaveValue|t.leaveStyle)):this.fromString(this.valueElement.value)||this.exportColor():this.fromString(this.valueElement.value,t.leaveValue)||(this.styleElement&&(this.styleElement.style.backgroundImage=this.styleElement._jscOrigStyle.backgroundImage,this.styleElement.style.backgroundColor=this.styleElement._jscOrigStyle.backgroundColor,this.styleElement.style.color=this.styleElement._jscOrigStyle.color),this.exportColor(t.leaveValue|t.leaveStyle)):this.exportColor()},this.exportColor=function(e){if(!(e&t.leaveValue)&&this.valueElement){var n=this.toString();this.uppercase&&(n=n.toUpperCase()),this.hash&&(n="#"+n),t.isElementType(this.valueElement,"input")?this.valueElement.value=n:this.valueElement.innerHTML=n}e&t.leaveStyle||this.styleElement&&(this.styleElement.style.backgroundImage="none",this.styleElement.style.backgroundColor="#"+this.toString(),this.styleElement.style.color=this.isLight()?"#000":"#FFF"),e&t.leavePad||!c()||l(),e&t.leaveSld||!c()||a()},this.fromHSV=function(t,e,n,o){if(null!==t){if(isNaN(t))return!1;t=Math.max(0,Math.min(360,t))}if(null!==e){if(isNaN(e))return!1;e=Math.max(0,Math.min(100,this.maxS,e),this.minS)}if(null!==n){if(isNaN(n))return!1;n=Math.max(0,Math.min(100,this.maxV,n),this.minV)}this.rgb=i(null===t?this.hsv[0]:this.hsv[0]=t,null===e?this.hsv[1]:this.hsv[1]=e,null===n?this.hsv[2]:this.hsv[2]=n),this.exportColor(o)},this.fromRGB=function(t,e,n,r){if(null!==t){if(isNaN(t))return!1;t=Math.max(0,Math.min(255,t))}if(null!==e){if(isNaN(e))return!1;e=Math.max(0,Math.min(255,e))}if(null!==n){if(isNaN(n))return!1;n=Math.max(0,Math.min(255,n))}var s=o(null===t?this.rgb[0]:t,null===e?this.rgb[1]:e,null===n?this.rgb[2]:n);null!==s[0]&&(this.hsv[0]=Math.max(0,Math.min(360,s[0]))),0!==s[2]&&(this.hsv[1]=null===s[1]?null:Math.max(0,this.minS,Math.min(100,this.maxS,s[1]))),this.hsv[2]=null===s[2]?null:Math.max(0,this.minV,Math.min(100,this.maxV,s[2]));var l=i(this.hsv[0],this.hsv[1],this.hsv[2]);this.rgb[0]=l[0],this.rgb[1]=l[1],this.rgb[2]=l[2],this.exportColor(r)},this.fromString=function(t,e){var n;if(n=t.match(/^\W*([0-9A-F]{3}([0-9A-F]{3})?)\W*$/i))return 6===n[1].length?this.fromRGB(parseInt(n[1].substr(0,2),16),parseInt(n[1].substr(2,2),16),parseInt(n[1].substr(4,2),16),e):this.fromRGB(parseInt(n[1].charAt(0)+n[1].charAt(0),16),parseInt(n[1].charAt(1)+n[1].charAt(1),16),parseInt(n[1].charAt(2)+n[1].charAt(2),16),e),!0;if(n=t.match(/^\W*rgba?\(([^)]*)\)\W*$/i)){var o,i,r,s=n[1].split(","),l=/^\s*(\d*)(\.\d+)?\s*$/;if(s.length>=3&&(o=s[0].match(l))&&(i=s[1].match(l))&&(r=s[2].match(l))){var a=parseFloat((o[1]||"0")+(o[2]||"")),c=parseFloat((i[1]||"0")+(i[2]||"")),d=parseFloat((r[1]||"0")+(r[2]||""));return this.fromRGB(a,c,d,e),!0}}return!1},this.toString=function(){return(256|Math.round(this.rgb[0])).toString(16).substr(1)+(256|Math.round(this.rgb[1])).toString(16).substr(1)+(256|Math.round(this.rgb[2])).toString(16).substr(1)},this.toHEXString=function(){return"#"+this.toString().toUpperCase()},this.toRGBString=function(){return"rgb("+Math.round(this.rgb[0])+","+Math.round(this.rgb[1])+","+Math.round(this.rgb[2])+")"},this.isLight=function(){return.213*this.rgb[0]+.715*this.rgb[1]+.072*this.rgb[2]>127.5},this._processParentElementsInDOM=function(){if(!this._linkedElementsProcessed){this._linkedElementsProcessed=!0;var e=this.targetElement;do{var n=t.getStyle(e);n&&"fixed"===n.position.toLowerCase()&&(this.fixed=!0),e!==this.targetElement&&(e._jscEventsAttached||(t.attachEvent(e,"scroll",t.onParentScroll),e._jscEventsAttached=!0))}while((e=e.parentNode)&&!t.isElementType(e,"body"))}},"string"==typeof e){var u=e,p=document.getElementById(u);p?this.targetElement=p:t.warn("Could not find target element with ID '"+u+"'")}else e?this.targetElement=e:t.warn("Invalid target element: '"+e+"'");if(this.targetElement._jscLinkedInstance)return void t.warn("Cannot link jscolor twice to the same element. Skipping.");this.targetElement._jscLinkedInstance=this,this.valueElement=t.fetchElement(this.valueElement),this.styleElement=t.fetchElement(this.styleElement);var m=this,g=this.container?t.fetchElement(this.container):document.getElementsByTagName("body")[0],f=3;if(t.isElementType(this.targetElement,"button"))if(this.targetElement.onclick){var v=this.targetElement.onclick;this.targetElement.onclick=function(t){return v.call(this,t),!1}}else this.targetElement.onclick=function(){return!1};if(this.valueElement&&t.isElementType(this.valueElement,"input")){var y=function(){m.fromString(m.valueElement.value,t.leaveValue),t.dispatchFineChange(m)};t.attachEvent(this.valueElement,"keyup",y),t.attachEvent(this.valueElement,"input",y),t.attachEvent(this.valueElement,"blur",d),this.valueElement.setAttribute("autocomplete","off")}this.styleElement&&(this.styleElement._jscOrigStyle={backgroundImage:this.styleElement.style.backgroundImage,backgroundColor:this.styleElement.style.backgroundColor,color:this.styleElement.style.color}),this.value?this.fromString(this.value)||this.exportColor():this.importColor()}};return t.jscolor.lookupClass="jscolor",t.jscolor.installByClassName=function(e){var n=document.getElementsByTagName("input"),o=document.getElementsByTagName("button");t.tryInstallOnElements(n,e),t.tryInstallOnElements(o,e)},t.register(),t}),n("colorStop",["jscolor"],function(t){function e(t,e,n,o){this.gradient=t,this.position=e,this.color=n,this.size=o,this.width=this.gradient.domElement.clientHeight/(10-this.size),this.height=this.gradient.domElement.clientHeight+.5*this.gradient.domElement.clientHeight,
this.addDomElement()}t.jscolor;return e.prototype.addDomElement=function(){var e=this,n=this.gradient.domElement.clientWidth*this.position;n<0&&(n=0),n>this.gradient.domElement.clientWidth-this.width&&(n=this.gradient.domElement.clientWidth-this.width),this.square=document.createElement("div"),this.square.style.position="absolute",this.square.style.left=n+"px",this.square.style.bottom=-1-.25*this.gradient.domElement.clientHeight+"px",this.square.style.width=this.width+"px",this.square.style.height=this.height+"px",this.square.style.borderRadius="20px",this.square.style.background=this.colorToString(),this.square.style.border="1px solid #111",this.square.style.cursor="pointer",this.cp=document.createElement("input"),this.cp.className="jscolor",this.cp.value=this.colorToString(),this.cp.style.width=0,this.cp.style.height=0,this.cp.style.margin=0,this.cp.style.padding=0,this.cp.style.border="None",this.square.ondblclick=function(t){this.children[0].jscolor.show(),this.children[0].jscolor.onFineChange=function(){e.color=[Math.round(this.rgb[0]),Math.round(this.rgb[1]),Math.round(this.rgb[2]),1],e.square.style.background=e.colorToString(),e.gradient.calculateGradient(),e.gradient.onChange.apply(e.gradient)}},this.square.onmouseover=function(t){e.hover=!0,e.gradient.hover=!0},this.square.onmousedown=function(t){e.drag=!0},this.gradient.domElement.addEventListener("mousemove",function(t){if(e.drag){var n=t.clientX-e.gradient.domElement.getBoundingClientRect().left-e.width/2;n<0&&(n=0),n>e.gradient.domElement.clientWidth-e.width&&(n=e.gradient.domElement.clientWidth-e.width),e.square.style.left=n+"px",e.position=n/e.gradient.domElement.clientWidth,e.gradient.calculateGradient(),e.gradient.onChange.apply(e.gradient)}}),window.addEventListener("mouseup",function(t){e.drag=!1}),this.square.onmouseout=function(t){e.hover=!1,e.gradient.hover=!1},this.square.append(this.cp),this.gradient.domElement.append(this.square),t.register()},e.prototype.colorToString=function(){return"rgba("+this.color[0]+", "+this.color[1]+", "+this.color[2]+", "+this.color[3]+")"},e}),n("Gradient",["colorStop"],function(t){function e(t,e){this.onChange=function(){};var n=this;this.domElement=t,this.colorStops=[],this.colorStopSize=e,this.createInitialColorStops(),this.calculateGradient(),this.domElement.onclick=function(t){if(!n.hover){var e=(t.clientX-this.getBoundingClientRect().left)/this.clientWidth;n.addColorStop(e,n.getColor(e))}},this.domElement.oncontextmenu=function(t){if(n.hover){for(var e,o=0;o<n.colorStops.length&&(e=n.colorStops[o],!e.hover);o++);n.colorStops.length>1&&(n.removeColorStop(t.toElement,e),n.hover=!1)}return!1}}return e.prototype.createInitialColorStops=function(){this.addColorStop(0,[255,255,0,1]),this.addColorStop(1,[128,0,0,1])},e.prototype.addColorStop=function(e,n){var o=new t(this,e,n,this.colorStopSize);this.colorStops.push(o)},e.prototype.removeColorStop=function(t,e){this.domElement.removeChild(t);var n=this.colorStops.indexOf(e);this.colorStops.splice(n,1),this.calculateGradient()},e.prototype.calculateGradient=function(){this.colorStops.sort(function(t,e){return t.position-e.position});var t,e="";for(t=0;t<this.colorStops.length;t++){var n=this.colorStops[t];e+=", "+n.colorToString()+" "+Math.round(1e4*n.position)/100+"%"}t>1?this.domElement.style.background="linear-gradient(to right"+e+")":(e=this.colorStops[0].colorToString(),this.domElement.style.background=e)},e.prototype.getColor=function(t){if(!(this.colorStops.length>1))return this.colorStops[0].color;for(var e=1;e<this.colorStops.length;e++){var n=this.colorStops[e];if(t<=n.position&&t>=this.colorStops[e-1].position){var o=t*(1/n.position);return this.getColorFormula(n.color,this.colorStops[e-1].color,o)}}return t<this.colorStops[0].position?this.colorStops[0].color:t>this.colorStops[this.colorStops.length-1].position?this.colorStops[this.colorStops.length-1].color:void 0},e.prototype.getColorFormula=function(t,e,n){var o=n,i=2*o-1,r=(i/1+1)/2,s=1-r,l=[Math.round(t[0]*r+e[0]*s),Math.round(t[1]*r+e[1]*s),Math.round(t[2]*r+e[2]*s),1];return l},e.prototype.colorToString=function(){this.colorStops.sort(function(t,e){return t.position-e.position});var t,e="";for(t=0;t<this.colorStops.length;t++){var n=this.colorStops[t];e+=", "+n.colorToString()+" "+Math.round(1e4*n.position)/100+"%"}return t>1?"linear-gradient(to right"+e+")":e=this.colorStops[0].colorToString()},e}),n("main",["Gradient"],function(t){return t}),e("main")});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
