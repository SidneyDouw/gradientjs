!function(t,e){"function"==typeof define&&define.amd?define([],e):t.Gradient=e()}(this,function(){var t,e,o;return function(n){function i(t,e){return b.call(t,e)}function r(t,e){var o,n,i,r,s,l,a,d,c,h,p,u,m=e&&e.split("/"),g=w.map,f=g&&g["*"]||{};if(t){for(t=t.split("/"),s=t.length-1,w.nodeIdCompat&&C.test(t[s])&&(t[s]=t[s].replace(C,"")),"."===t[0].charAt(0)&&m&&(u=m.slice(0,m.length-1),t=u.concat(t)),c=0;c<t.length;c++)if(p=t[c],"."===p)t.splice(c,1),c-=1;else if(".."===p){if(0===c||1===c&&".."===t[2]||".."===t[c-1])continue;c>0&&(t.splice(c-1,2),c-=2)}t=t.join("/")}if((m||f)&&g){for(o=t.split("/"),c=o.length;c>0;c-=1){if(n=o.slice(0,c).join("/"),m)for(h=m.length;h>0;h-=1)if(i=g[m.slice(0,h).join("/")],i&&(i=i[n])){r=i,l=c;break}if(r)break;!a&&f&&f[n]&&(a=f[n],d=c)}!r&&a&&(r=a,l=d),r&&(o.splice(0,l,r),t=o.join("/"))}return t}function s(t,e){return function(){var o=S.call(arguments,0);return"string"!=typeof o[0]&&1===o.length&&o.push(null),m.apply(n,o.concat([t,e]))}}function l(t){return function(e){return r(e,t)}}function a(t){return function(e){v[t]=e}}function d(t){if(i(y,t)){var e=y[t];delete y[t],E[t]=!0,u.apply(n,e)}if(!i(v,t)&&!i(E,t))throw new Error("No "+t);return v[t]}function c(t){var e,o=t?t.indexOf("!"):-1;return o>-1&&(e=t.substring(0,o),t=t.substring(o+1,t.length)),[e,t]}function h(t){return t?c(t):[]}function p(t){return function(){return w&&w.config&&w.config[t]||{}}}var u,m,g,f,v={},y={},w={},E={},b=Object.prototype.hasOwnProperty,S=[].slice,C=/\.js$/;g=function(t,e){var o,n=c(t),i=n[0],s=e[1];return t=n[1],i&&(i=r(i,s),o=d(i)),i?t=o&&o.normalize?o.normalize(t,l(s)):r(t,s):(t=r(t,s),n=c(t),i=n[0],t=n[1],i&&(o=d(i))),{f:i?i+"!"+t:t,n:t,pr:i,p:o}},f={require:function(t){return s(t)},exports:function(t){var e=v[t];return"undefined"!=typeof e?e:v[t]={}},module:function(t){return{id:t,uri:"",exports:v[t],config:p(t)}}},u=function(t,e,o,r){var l,c,p,u,m,w,b,S=[],C=typeof o;if(r=r||t,w=h(r),"undefined"===C||"function"===C){for(e=!e.length&&o.length?["require","exports","module"]:e,m=0;m<e.length;m+=1)if(u=g(e[m],w),c=u.f,"require"===c)S[m]=f.require(t);else if("exports"===c)S[m]=f.exports(t),b=!0;else if("module"===c)l=S[m]=f.module(t);else if(i(v,c)||i(y,c)||i(E,c))S[m]=d(c);else{if(!u.p)throw new Error(t+" missing "+c);u.p.load(u.n,s(r,!0),a(c),{}),S[m]=v[c]}p=o?o.apply(v[t],S):void 0,t&&(l&&l.exports!==n&&l.exports!==v[t]?v[t]=l.exports:p===n&&b||(v[t]=p))}else t&&(v[t]=o)},t=e=m=function(t,e,o,i,r){if("string"==typeof t)return f[t]?f[t](e):d(g(t,h(e)).f);if(!t.splice){if(w=t,w.deps&&m(w.deps,w.callback),!e)return;e.splice?(t=e,e=o,o=null):t=n}return e=e||function(){},"function"==typeof o&&(o=i,i=r),i?u(n,t,e,o):setTimeout(function(){u(n,t,e,o)},4),m},m.config=function(t){return m(t)},t._defined=v,o=function(t,e,o){if("string"!=typeof t)throw new Error("See almond README: incorrect module build, no module name");e.splice||(o=e,e=[]),i(v,t)||i(y,t)||(y[t]=[t,e,o])},o.amd={jQuery:!0}}(),o("almond",function(){}),o("jscolor",[],function(){var t={register:function(){t.attachDOMReadyEvent(t.init),t.attachEvent(document,"mousedown",t.onDocumentMouseDown),t.attachEvent(document,"touchstart",t.onDocumentTouchStart),t.attachEvent(window,"resize",t.onWindowResize)},init:function(){t.jscolor.lookupClass&&t.jscolor.installByClassName(t.jscolor.lookupClass)},tryInstallOnElements:function(e,o){for(var n=new RegExp("(^|\\s)("+o+")(\\s*(\\{[^}]*\\})|\\s|$)","i"),i=0;i<e.length;i+=1)if(void 0===e[i].type||"color"!=e[i].type.toLowerCase()||!t.isColorAttrSupported){var r;if(!e[i].jscolor&&e[i].className&&(r=e[i].className.match(n))){var s=e[i],l=null,a=t.getDataAttr(s,"jscolor");null!==a?l=a:r[4]&&(l=r[4]);var d={};if(l)try{d=new Function("return ("+l+")")()}catch(e){t.warn("Error parsing jscolor options: "+e+":\n"+l)}s.jscolor=new t.jscolor(s,d)}}},isColorAttrSupported:function(){var t=document.createElement("input");return!(!t.setAttribute||(t.setAttribute("type","color"),"color"!=t.type.toLowerCase()))}(),isCanvasSupported:function(){var t=document.createElement("canvas");return!(!t.getContext||!t.getContext("2d"))}(),fetchElement:function(t){return"string"==typeof t?document.getElementById(t):t},isElementType:function(t,e){return t.nodeName.toLowerCase()===e.toLowerCase()},getDataAttr:function(t,e){var o="data-"+e,n=t.getAttribute(o);return null!==n?n:null},attachEvent:function(t,e,o){t.addEventListener?t.addEventListener(e,o,!1):t.attachEvent&&t.attachEvent("on"+e,o)},detachEvent:function(t,e,o){t.removeEventListener?t.removeEventListener(e,o,!1):t.detachEvent&&t.detachEvent("on"+e,o)},_attachedGroupEvents:{},attachGroupEvent:function(e,o,n,i){t._attachedGroupEvents.hasOwnProperty(e)||(t._attachedGroupEvents[e]=[]),t._attachedGroupEvents[e].push([o,n,i]),t.attachEvent(o,n,i)},detachGroupEvents:function(e){if(t._attachedGroupEvents.hasOwnProperty(e)){for(var o=0;o<t._attachedGroupEvents[e].length;o+=1){var n=t._attachedGroupEvents[e][o];t.detachEvent(n[0],n[1],n[2])}delete t._attachedGroupEvents[e]}},attachDOMReadyEvent:function(t){var e=!1,o=function(){e||(e=!0,t())};if("complete"===document.readyState)return void setTimeout(o,1);if(document.addEventListener)document.addEventListener("DOMContentLoaded",o,!1),window.addEventListener("load",o,!1);else if(document.attachEvent&&(document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&(document.detachEvent("onreadystatechange",arguments.callee),o())}),window.attachEvent("onload",o),document.documentElement.doScroll&&window==window.top)){var n=function(){if(document.body)try{document.documentElement.doScroll("left"),o()}catch(t){setTimeout(n,1)}};n()}},warn:function(t){window.console&&window.console.warn&&window.console.warn(t)},preventDefault:function(t){t.preventDefault&&t.preventDefault(),t.returnValue=!1},captureTarget:function(e){e.setCapture&&(t._capturedTarget=e,t._capturedTarget.setCapture())},releaseTarget:function(){t._capturedTarget&&(t._capturedTarget.releaseCapture(),t._capturedTarget=null)},fireEvent:function(t,e){if(t)if(document.createEvent){var o=document.createEvent("HTMLEvents");o.initEvent(e,!0,!0),t.dispatchEvent(o)}else if(document.createEventObject){var o=document.createEventObject();t.fireEvent("on"+e,o)}else t["on"+e]&&t["on"+e]()},classNameToList:function(t){return t.replace(/^\s+|\s+$/g,"").split(/\s+/)},hasClass:function(t,e){return!!e&&-1!=(" "+t.className.replace(/\s+/g," ")+" ").indexOf(" "+e+" ")},setClass:function(e,o){for(var n=t.classNameToList(o),i=0;i<n.length;i+=1)t.hasClass(e,n[i])||(e.className+=(e.className?" ":"")+n[i])},unsetClass:function(e,o){for(var n=t.classNameToList(o),i=0;i<n.length;i+=1){var r=new RegExp("^\\s*"+n[i]+"\\s*|\\s*"+n[i]+"\\s*$|\\s+"+n[i]+"(\\s+)","g");e.className=e.className.replace(r,"$1")}},getStyle:function(t){return window.getComputedStyle?window.getComputedStyle(t):t.currentStyle},setStyle:function(){var t=document.createElement("div"),e=function(e){for(var o=0;o<e.length;o+=1)if(e[o]in t.style)return e[o]},o={borderRadius:e(["borderRadius","MozBorderRadius","webkitBorderRadius"]),boxShadow:e(["boxShadow","MozBoxShadow","webkitBoxShadow"])};return function(t,e,n){switch(e.toLowerCase()){case"opacity":var i=Math.round(100*parseFloat(n));t.style.opacity=n,t.style.filter="alpha(opacity="+i+")";break;default:t.style[o[e]]=n}}}(),setBorderRadius:function(e,o){t.setStyle(e,"borderRadius",o||"0")},setBoxShadow:function(e,o){t.setStyle(e,"boxShadow",o||"none")},getElementPos:function(e,o){var n=0,i=0,r=e.getBoundingClientRect();if(n=r.left,i=r.top,!o){var s=t.getViewPos();n+=s[0],i+=s[1]}return[n,i]},getElementSize:function(t){return[t.offsetWidth,t.offsetHeight]},getAbsPointerPos:function(t){t||(t=window.event);var e=0,o=0;return"undefined"!=typeof t.changedTouches&&t.changedTouches.length?(e=t.changedTouches[0].clientX,o=t.changedTouches[0].clientY):"number"==typeof t.clientX&&(e=t.clientX,o=t.clientY),{x:e,y:o}},getRelPointerPos:function(t){t||(t=window.event);var e=t.target||t.srcElement,o=e.getBoundingClientRect(),n=0,i=0,r=0,s=0;return"undefined"!=typeof t.changedTouches&&t.changedTouches.length?(r=t.changedTouches[0].clientX,s=t.changedTouches[0].clientY):"number"==typeof t.clientX&&(r=t.clientX,s=t.clientY),n=r-o.left,i=s-o.top,{x:n,y:i}},getViewPos:function(){var t=document.documentElement;return[(window.pageXOffset||t.scrollLeft)-(t.clientLeft||0),(window.pageYOffset||t.scrollTop)-(t.clientTop||0)]},getViewSize:function(){var t=document.documentElement;return[window.innerWidth||t.clientWidth,window.innerHeight||t.clientHeight]},redrawPosition:function(){if(t.picker&&t.picker.owner){var e,o,n=t.picker.owner;n.fixed?(e=t.getElementPos(n.targetElement,!0),o=[0,0]):(e=t.getElementPos(n.targetElement),o=t.getViewPos());var i,r,s,l=t.getElementSize(n.targetElement),a=t.getViewSize(),d=t.getPickerOuterDims(n);switch(n.position.toLowerCase()){case"left":i=1,r=0,s=-1;break;case"right":i=1,r=0,s=1;break;case"top":i=0,r=1,s=-1;break;default:i=0,r=1,s=1}var c=(l[r]+d[r])/2;if(n.smartPosition)var h=[-o[i]+e[i]+d[i]>a[i]&&-o[i]+e[i]+l[i]/2>a[i]/2&&e[i]+l[i]-d[i]>=0?e[i]+l[i]-d[i]:e[i],-o[r]+e[r]+l[r]+d[r]-c+c*s>a[r]?-o[r]+e[r]+l[r]/2>a[r]/2&&e[r]+l[r]-c-c*s>=0?e[r]+l[r]-c-c*s:e[r]+l[r]-c+c*s:e[r]+l[r]-c+c*s>=0?e[r]+l[r]-c+c*s:e[r]+l[r]-c-c*s];else var h=[e[i],e[r]+l[r]-c+c*s];var p=h[i],u=h[r],m=n.fixed?"fixed":"absolute",g=(h[0]+d[0]>e[0]||h[0]<e[0]+l[0])&&h[1]+d[1]<e[1]+l[1];t._drawPosition(n,p,u,m,g)}},_drawPosition:function(e,o,n,i,r){var s=r?0:e.shadowBlur;t.picker.wrap.style.position=i,t.picker.wrap.style.left=o+"px",t.picker.wrap.style.top=n+"px",t.setBoxShadow(t.picker.boxS,e.shadow?new t.BoxShadow(0,s,e.shadowBlur,0,e.shadowColor):null)},getPickerDims:function(e){var o=!!t.getSliderComponent(e),n=[2*e.insetWidth+2*e.padding+e.width+(o?2*e.insetWidth+t.getPadToSliderPadding(e)+e.sliderSize:0),2*e.insetWidth+2*e.padding+e.height+(e.closable?2*e.insetWidth+e.padding+e.buttonHeight:0)];return n},getPickerOuterDims:function(e){var o=t.getPickerDims(e);return[o[0]+2*e.borderWidth,o[1]+2*e.borderWidth]},getPadToSliderPadding:function(t){return Math.max(t.padding,1.5*(2*t.pointerBorderWidth+t.pointerThickness))},getPadYComponent:function(t){switch(t.mode.charAt(1).toLowerCase()){case"v":return"v"}return"s"},getSliderComponent:function(t){if(t.mode.length>2)switch(t.mode.charAt(2).toLowerCase()){case"s":return"s";case"v":return"v"}return null},onDocumentMouseDown:function(e){e||(e=window.event);var o=e.target||e.srcElement;o._jscLinkedInstance?o._jscLinkedInstance.showOnClick&&o._jscLinkedInstance.show():o._jscControlName?t.onControlPointerStart(e,o,o._jscControlName,"mouse"):t.picker&&t.picker.owner&&t.picker.owner.hide()},onDocumentTouchStart:function(e){e||(e=window.event);var o=e.target||e.srcElement;o._jscLinkedInstance?o._jscLinkedInstance.showOnClick&&o._jscLinkedInstance.show():o._jscControlName?t.onControlPointerStart(e,o,o._jscControlName,"touch"):t.picker&&t.picker.owner&&t.picker.owner.hide()},onWindowResize:function(e){t.redrawPosition()},onParentScroll:function(e){t.picker&&t.picker.owner&&t.picker.owner.hide()},_pointerMoveEvent:{mouse:"mousemove",touch:"touchmove"},_pointerEndEvent:{mouse:"mouseup",touch:"touchend"},_pointerOrigin:null,_capturedTarget:null,onControlPointerStart:function(e,o,n,i){var r=o._jscInstance;t.preventDefault(e),t.captureTarget(o);var s=function(r,s){t.attachGroupEvent("drag",r,t._pointerMoveEvent[i],t.onDocumentPointerMove(e,o,n,i,s)),t.attachGroupEvent("drag",r,t._pointerEndEvent[i],t.onDocumentPointerEnd(e,o,n,i))};if(s(document,[0,0]),window.parent&&window.frameElement){var l=window.frameElement.getBoundingClientRect(),a=[-l.left,-l.top];s(window.parent.window.document,a)}var d=t.getAbsPointerPos(e),c=t.getRelPointerPos(e);switch(t._pointerOrigin={x:d.x-c.x,y:d.y-c.y},n){case"pad":switch(t.getSliderComponent(r)){case"s":0===r.hsv[1]&&r.fromHSV(null,100,null);break;case"v":0===r.hsv[2]&&r.fromHSV(null,null,100)}t.setPad(r,e,0,0);break;case"sld":t.setSld(r,e,0)}t.dispatchFineChange(r)},onDocumentPointerMove:function(e,o,n,i,r){return function(e){var i=o._jscInstance;switch(n){case"pad":e||(e=window.event),t.setPad(i,e,r[0],r[1]),t.dispatchFineChange(i);break;case"sld":e||(e=window.event),t.setSld(i,e,r[1]),t.dispatchFineChange(i)}}},onDocumentPointerEnd:function(e,o,n,i){return function(e){var n=o._jscInstance;t.detachGroupEvents("drag"),t.releaseTarget(),t.dispatchChange(n)}},dispatchChange:function(e){e.valueElement&&t.isElementType(e.valueElement,"input")&&t.fireEvent(e.valueElement,"change")},dispatchFineChange:function(t){if(t.onFineChange){var e;e="string"==typeof t.onFineChange?new Function(t.onFineChange):t.onFineChange,e.call(t)}},setPad:function(e,o,n,i){var r=t.getAbsPointerPos(o),s=n+r.x-t._pointerOrigin.x-e.padding-e.insetWidth,l=i+r.y-t._pointerOrigin.y-e.padding-e.insetWidth,a=s*(360/(e.width-1)),d=100-l*(100/(e.height-1));switch(t.getPadYComponent(e)){case"s":e.fromHSV(a,d,null,t.leaveSld);break;case"v":e.fromHSV(a,null,d,t.leaveSld)}},setSld:function(e,o,n){var i=t.getAbsPointerPos(o),r=n+i.y-t._pointerOrigin.y-e.padding-e.insetWidth,s=100-r*(100/(e.height-1));switch(t.getSliderComponent(e)){case"s":e.fromHSV(null,s,null,t.leavePad);break;case"v":e.fromHSV(null,null,s,t.leavePad)}},_vmlNS:"jsc_vml_",_vmlCSS:"jsc_vml_css_",_vmlReady:!1,initVML:function(){if(!t._vmlReady){var e=document;if(e.namespaces[t._vmlNS]||e.namespaces.add(t._vmlNS,"urn:schemas-microsoft-com:vml"),!e.styleSheets[t._vmlCSS]){var o=["shape","shapetype","group","background","path","formulas","handles","fill","stroke","shadow","textbox","textpath","imagedata","line","polyline","curve","rect","roundrect","oval","arc","image"],n=e.createStyleSheet();n.owningElement.id=t._vmlCSS;for(var i=0;i<o.length;i+=1)n.addRule(t._vmlNS+"\\:"+o[i],"behavior:url(#default#VML);")}t._vmlReady=!0}},createPalette:function(){var e={elm:null,draw:null};if(t.isCanvasSupported){var o=document.createElement("canvas"),n=o.getContext("2d"),i=function(t,e,i){o.width=t,o.height=e,n.clearRect(0,0,o.width,o.height);var r=n.createLinearGradient(0,0,o.width,0);r.addColorStop(0,"#F00"),r.addColorStop(1/6,"#FF0"),r.addColorStop(2/6,"#0F0"),r.addColorStop(.5,"#0FF"),r.addColorStop(4/6,"#00F"),r.addColorStop(5/6,"#F0F"),r.addColorStop(1,"#F00"),n.fillStyle=r,n.fillRect(0,0,o.width,o.height);var s=n.createLinearGradient(0,0,0,o.height);switch(i.toLowerCase()){case"s":s.addColorStop(0,"rgba(255,255,255,0)"),s.addColorStop(1,"rgba(255,255,255,1)");break;case"v":s.addColorStop(0,"rgba(0,0,0,0)"),s.addColorStop(1,"rgba(0,0,0,1)")}n.fillStyle=s,n.fillRect(0,0,o.width,o.height)};e.elm=o,e.draw=i}else{t.initVML();var r=document.createElement("div");r.style.position="relative",r.style.overflow="hidden";var s=document.createElement(t._vmlNS+":fill");s.type="gradient",s.method="linear",s.angle="90",s.colors="16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0";var l=document.createElement(t._vmlNS+":rect");l.style.position="absolute",l.style.left="-1px",l.style.top="-1px",l.stroked=!1,l.appendChild(s),r.appendChild(l);var a=document.createElement(t._vmlNS+":fill");a.type="gradient",a.method="linear",a.angle="180",a.opacity="0";var d=document.createElement(t._vmlNS+":rect");d.style.position="absolute",d.style.left="-1px",d.style.top="-1px",d.stroked=!1,d.appendChild(a),r.appendChild(d);var i=function(t,e,o){switch(r.style.width=t+"px",r.style.height=e+"px",l.style.width=d.style.width=t+1+"px",l.style.height=d.style.height=e+1+"px",s.color="#F00",s.color2="#F00",o.toLowerCase()){case"s":a.color=a.color2="#FFF";break;case"v":a.color=a.color2="#000"}};e.elm=r,e.draw=i}return e},createSliderGradient:function(){var e={elm:null,draw:null};if(t.isCanvasSupported){var o=document.createElement("canvas"),n=o.getContext("2d"),i=function(t,e,i,r){o.width=t,o.height=e,n.clearRect(0,0,o.width,o.height);var s=n.createLinearGradient(0,0,0,o.height);s.addColorStop(0,i),s.addColorStop(1,r),n.fillStyle=s,n.fillRect(0,0,o.width,o.height)};e.elm=o,e.draw=i}else{t.initVML();var r=document.createElement("div");r.style.position="relative",r.style.overflow="hidden";var s=document.createElement(t._vmlNS+":fill");s.type="gradient",s.method="linear",s.angle="180";var l=document.createElement(t._vmlNS+":rect");l.style.position="absolute",l.style.left="-1px",l.style.top="-1px",l.stroked=!1,l.appendChild(s),r.appendChild(l);var i=function(t,e,o,n){r.style.width=t+"px",r.style.height=e+"px",l.style.width=t+1+"px",l.style.height=e+1+"px",s.color=o,s.color2=n};e.elm=r,e.draw=i}return e},leaveValue:1,leaveStyle:2,leavePad:4,leaveSld:8,BoxShadow:function(){var t=function(t,e,o,n,i,r){this.hShadow=t,this.vShadow=e,this.blur=o,this.spread=n,this.color=i,this.inset=!!r};return t.prototype.toString=function(){var t=[Math.round(this.hShadow)+"px",Math.round(this.vShadow)+"px",Math.round(this.blur)+"px",Math.round(this.spread)+"px",this.color];return this.inset&&t.push("inset"),t.join(" ")},t}(),jscolor:function(e,o){function n(t,e,o){t/=255,e/=255,o/=255;var n=Math.min(Math.min(t,e),o),i=Math.max(Math.max(t,e),o),r=i-n;if(0===r)return[null,0,100*i];var s=t===n?3+(o-e)/r:e===n?5+(t-o)/r:1+(e-t)/r;return[60*(6===s?0:s),100*(r/i),100*i]}function i(t,e,o){var n=255*(o/100);if(null===t)return[n,n,n];t/=60,e/=100;var i=Math.floor(t),r=i%2?t-i:1-(t-i),s=n*(1-e),l=n*(1-e*r);switch(i){case 6:case 0:return[n,l,s];case 1:return[l,n,s];case 2:return[s,n,l];case 3:return[s,l,n];case 4:return[l,s,n];case 5:return[n,s,l]}}function r(){t.unsetClass(m.targetElement,m.activeClass),t.picker.wrap.parentNode.removeChild(t.picker.wrap),delete t.picker.owner}function s(){function e(){var t=m.insetColor.split(/\s+/),e=t.length<2?t[0]:t[1]+" "+t[0]+" "+t[0]+" "+t[1];o.btn.style.borderColor=e}m._processParentElementsInDOM(),t.picker||(t.picker={owner:null,wrap:document.createElement("div"),box:document.createElement("div"),boxS:document.createElement("div"),boxB:document.createElement("div"),pad:document.createElement("div"),padB:document.createElement("div"),padM:document.createElement("div"),padPal:t.createPalette(),cross:document.createElement("div"),crossBY:document.createElement("div"),crossBX:document.createElement("div"),crossLY:document.createElement("div"),crossLX:document.createElement("div"),sld:document.createElement("div"),sldB:document.createElement("div"),sldM:document.createElement("div"),sldGrad:t.createSliderGradient(),sldPtrS:document.createElement("div"),sldPtrIB:document.createElement("div"),sldPtrMB:document.createElement("div"),sldPtrOB:document.createElement("div"),btn:document.createElement("div"),btnT:document.createElement("span")},t.picker.pad.appendChild(t.picker.padPal.elm),t.picker.padB.appendChild(t.picker.pad),t.picker.cross.appendChild(t.picker.crossBY),t.picker.cross.appendChild(t.picker.crossBX),t.picker.cross.appendChild(t.picker.crossLY),t.picker.cross.appendChild(t.picker.crossLX),t.picker.padB.appendChild(t.picker.cross),t.picker.box.appendChild(t.picker.padB),t.picker.box.appendChild(t.picker.padM),t.picker.sld.appendChild(t.picker.sldGrad.elm),t.picker.sldB.appendChild(t.picker.sld),t.picker.sldB.appendChild(t.picker.sldPtrOB),t.picker.sldPtrOB.appendChild(t.picker.sldPtrMB),t.picker.sldPtrMB.appendChild(t.picker.sldPtrIB),t.picker.sldPtrIB.appendChild(t.picker.sldPtrS),t.picker.box.appendChild(t.picker.sldB),t.picker.box.appendChild(t.picker.sldM),t.picker.btn.appendChild(t.picker.btnT),t.picker.box.appendChild(t.picker.btn),t.picker.boxB.appendChild(t.picker.box),t.picker.wrap.appendChild(t.picker.boxS),t.picker.wrap.appendChild(t.picker.boxB));var o=t.picker,n=!!t.getSliderComponent(m),i=t.getPickerDims(m),r=2*m.pointerBorderWidth+m.pointerThickness+2*m.crossSize,s=t.getPadToSliderPadding(m),d=Math.min(m.borderRadius,Math.round(m.padding*Math.PI)),c="crosshair";o.wrap.style.clear="both",o.wrap.style.width=i[0]+2*m.borderWidth+"px",o.wrap.style.height=i[1]+2*m.borderWidth+"px",o.wrap.style.zIndex=m.zIndex,o.box.style.width=i[0]+"px",o.box.style.height=i[1]+"px",o.boxS.style.position="absolute",o.boxS.style.left="0",o.boxS.style.top="0",o.boxS.style.width="100%",o.boxS.style.height="100%",t.setBorderRadius(o.boxS,d+"px"),o.boxB.style.position="relative",o.boxB.style.border=m.borderWidth+"px solid",o.boxB.style.borderColor=m.borderColor,o.boxB.style.background=m.backgroundColor,t.setBorderRadius(o.boxB,d+"px"),o.padM.style.background=o.sldM.style.background="#FFF",t.setStyle(o.padM,"opacity","0"),t.setStyle(o.sldM,"opacity","0"),o.pad.style.position="relative",o.pad.style.width=m.width+"px",o.pad.style.height=m.height+"px",o.padPal.draw(m.width,m.height,t.getPadYComponent(m)),o.padB.style.position="absolute",o.padB.style.left=m.padding+"px",o.padB.style.top=m.padding+"px",o.padB.style.border=m.insetWidth+"px solid",o.padB.style.borderColor=m.insetColor,o.padM._jscInstance=m,o.padM._jscControlName="pad",o.padM.style.position="absolute",o.padM.style.left="0",o.padM.style.top="0",o.padM.style.width=m.padding+2*m.insetWidth+m.width+s/2+"px",o.padM.style.height=i[1]+"px",o.padM.style.cursor=c,o.cross.style.position="absolute",o.cross.style.left=o.cross.style.top="0",o.cross.style.width=o.cross.style.height=r+"px",o.crossBY.style.position=o.crossBX.style.position="absolute",o.crossBY.style.background=o.crossBX.style.background=m.pointerBorderColor,o.crossBY.style.width=o.crossBX.style.height=2*m.pointerBorderWidth+m.pointerThickness+"px",o.crossBY.style.height=o.crossBX.style.width=r+"px",o.crossBY.style.left=o.crossBX.style.top=Math.floor(r/2)-Math.floor(m.pointerThickness/2)-m.pointerBorderWidth+"px",o.crossBY.style.top=o.crossBX.style.left="0",o.crossLY.style.position=o.crossLX.style.position="absolute",o.crossLY.style.background=o.crossLX.style.background=m.pointerColor,o.crossLY.style.height=o.crossLX.style.width=r-2*m.pointerBorderWidth+"px",o.crossLY.style.width=o.crossLX.style.height=m.pointerThickness+"px",o.crossLY.style.left=o.crossLX.style.top=Math.floor(r/2)-Math.floor(m.pointerThickness/2)+"px",o.crossLY.style.top=o.crossLX.style.left=m.pointerBorderWidth+"px",o.sld.style.overflow="hidden",o.sld.style.width=m.sliderSize+"px",o.sld.style.height=m.height+"px",o.sldGrad.draw(m.sliderSize,m.height,"#000","#000"),o.sldB.style.display=n?"block":"none",o.sldB.style.position="absolute",o.sldB.style.right=m.padding+"px",o.sldB.style.top=m.padding+"px",o.sldB.style.border=m.insetWidth+"px solid",o.sldB.style.borderColor=m.insetColor,o.sldM._jscInstance=m,o.sldM._jscControlName="sld",o.sldM.style.display=n?"block":"none",o.sldM.style.position="absolute",o.sldM.style.right="0",o.sldM.style.top="0",o.sldM.style.width=m.sliderSize+s/2+m.padding+2*m.insetWidth+"px",o.sldM.style.height=i[1]+"px",o.sldM.style.cursor="default",o.sldPtrIB.style.border=o.sldPtrOB.style.border=m.pointerBorderWidth+"px solid "+m.pointerBorderColor,o.sldPtrOB.style.position="absolute",o.sldPtrOB.style.left=-(2*m.pointerBorderWidth+m.pointerThickness)+"px",o.sldPtrOB.style.top="0",o.sldPtrMB.style.border=m.pointerThickness+"px solid "+m.pointerColor,o.sldPtrS.style.width=m.sliderSize+"px",o.sldPtrS.style.height=f+"px",o.btn.style.display=m.closable?"block":"none",o.btn.style.position="absolute",o.btn.style.left=m.padding+"px",o.btn.style.bottom=m.padding+"px",o.btn.style.padding="0 15px",o.btn.style.height=m.buttonHeight+"px",o.btn.style.border=m.insetWidth+"px solid",e(),o.btn.style.color=m.buttonColor,o.btn.style.font="12px sans-serif",o.btn.style.textAlign="center";try{o.btn.style.cursor="pointer"}catch(t){o.btn.style.cursor="hand"}o.btn.onmousedown=function(){m.hide()},o.btnT.style.lineHeight=m.buttonHeight+"px",o.btnT.innerHTML="",o.btnT.appendChild(document.createTextNode(m.closeText)),l(),a(),t.picker.owner&&t.picker.owner!==m&&t.unsetClass(t.picker.owner.targetElement,m.activeClass),t.picker.owner=m,t.isElementType(g,"body")?t.redrawPosition():t._drawPosition(m,0,0,"relative",!1),o.wrap.parentNode!=g&&g.appendChild(o.wrap),t.setClass(m.targetElement,m.activeClass)}function l(){switch(t.getPadYComponent(m)){case"s":var e=1;break;case"v":var e=2}var o=Math.round(m.hsv[0]/360*(m.width-1)),n=Math.round((1-m.hsv[e]/100)*(m.height-1)),r=2*m.pointerBorderWidth+m.pointerThickness+2*m.crossSize,s=-Math.floor(r/2);switch(t.picker.cross.style.left=o+s+"px",t.picker.cross.style.top=n+s+"px",t.getSliderComponent(m)){case"s":var l=i(m.hsv[0],100,m.hsv[2]),a=i(m.hsv[0],0,m.hsv[2]),d="rgb("+Math.round(l[0])+","+Math.round(l[1])+","+Math.round(l[2])+")",c="rgb("+Math.round(a[0])+","+Math.round(a[1])+","+Math.round(a[2])+")";t.picker.sldGrad.draw(m.sliderSize,m.height,d,c);break;case"v":var h=i(m.hsv[0],m.hsv[1],100),d="rgb("+Math.round(h[0])+","+Math.round(h[1])+","+Math.round(h[2])+")",c="#000";t.picker.sldGrad.draw(m.sliderSize,m.height,d,c)}}function a(){var e=t.getSliderComponent(m);if(e){switch(e){case"s":var o=1;break;case"v":var o=2}var n=Math.round((1-m.hsv[o]/100)*(m.height-1));t.picker.sldPtrOB.style.top=n-(2*m.pointerBorderWidth+m.pointerThickness)-Math.floor(f/2)+"px"}}function d(){return t.picker&&t.picker.owner===m}function c(){m.importColor()}this.value=null,this.valueElement=e,this.styleElement=e,this.required=!0,this.refine=!0,this.hash=!1,this.uppercase=!0,this.onFineChange=null,this.activeClass="jscolor-active",this.minS=0,this.maxS=100,this.minV=0,this.maxV=100,this.hsv=[0,0,100],this.rgb=[255,255,255],this.width=181,this.height=101,this.showOnClick=!0,this.mode="HSV",this.position="bottom",this.smartPosition=!0,this.sliderSize=16,this.crossSize=8,this.closable=!1,this.closeText="Close",this.buttonColor="#000000",this.buttonHeight=18,this.padding=12,this.backgroundColor="#FFFFFF",this.borderWidth=1,this.borderColor="#BBBBBB",this.borderRadius=8,this.insetWidth=1,this.insetColor="#BBBBBB",this.shadow=!0,this.shadowBlur=15,this.shadowColor="rgba(0,0,0,0.2)",this.pointerColor="#4C4C4C",this.pointerBorderColor="#FFFFFF",this.pointerBorderWidth=1,this.pointerThickness=2,this.zIndex=1e3,this.container=null;for(var h in o)o.hasOwnProperty(h)&&(this[h]=o[h]);if(this.hide=function(){d()&&r()},this.show=function(){s()},this.redraw=function(){d()&&s()},this.importColor=function(){this.valueElement&&t.isElementType(this.valueElement,"input")?this.refine?!this.required&&/^\s*$/.test(this.valueElement.value)?(this.valueElement.value="",this.styleElement&&(this.styleElement.style.backgroundImage=this.styleElement._jscOrigStyle.backgroundImage,this.styleElement.style.backgroundColor=this.styleElement._jscOrigStyle.backgroundColor,this.styleElement.style.color=this.styleElement._jscOrigStyle.color),this.exportColor(t.leaveValue|t.leaveStyle)):this.fromString(this.valueElement.value)||this.exportColor():this.fromString(this.valueElement.value,t.leaveValue)||(this.styleElement&&(this.styleElement.style.backgroundImage=this.styleElement._jscOrigStyle.backgroundImage,this.styleElement.style.backgroundColor=this.styleElement._jscOrigStyle.backgroundColor,this.styleElement.style.color=this.styleElement._jscOrigStyle.color),this.exportColor(t.leaveValue|t.leaveStyle)):this.exportColor()},this.exportColor=function(e){if(!(e&t.leaveValue)&&this.valueElement){var o=this.toString();this.uppercase&&(o=o.toUpperCase()),this.hash&&(o="#"+o),t.isElementType(this.valueElement,"input")?this.valueElement.value=o:this.valueElement.innerHTML=o}e&t.leaveStyle||this.styleElement&&(this.styleElement.style.backgroundImage="none",this.styleElement.style.backgroundColor="#"+this.toString(),this.styleElement.style.color=this.isLight()?"#000":"#FFF"),e&t.leavePad||!d()||l(),e&t.leaveSld||!d()||a()},this.fromHSV=function(t,e,o,n){if(null!==t){if(isNaN(t))return!1;t=Math.max(0,Math.min(360,t))}if(null!==e){if(isNaN(e))return!1;e=Math.max(0,Math.min(100,this.maxS,e),this.minS)}if(null!==o){if(isNaN(o))return!1;o=Math.max(0,Math.min(100,this.maxV,o),this.minV)}this.rgb=i(null===t?this.hsv[0]:this.hsv[0]=t,null===e?this.hsv[1]:this.hsv[1]=e,null===o?this.hsv[2]:this.hsv[2]=o),this.exportColor(n)},this.fromRGB=function(t,e,o,r){if(null!==t){if(isNaN(t))return!1;t=Math.max(0,Math.min(255,t))}if(null!==e){if(isNaN(e))return!1;e=Math.max(0,Math.min(255,e))}if(null!==o){if(isNaN(o))return!1;o=Math.max(0,Math.min(255,o))}var s=n(null===t?this.rgb[0]:t,null===e?this.rgb[1]:e,null===o?this.rgb[2]:o);null!==s[0]&&(this.hsv[0]=Math.max(0,Math.min(360,s[0]))),0!==s[2]&&(this.hsv[1]=null===s[1]?null:Math.max(0,this.minS,Math.min(100,this.maxS,s[1]))),this.hsv[2]=null===s[2]?null:Math.max(0,this.minV,Math.min(100,this.maxV,s[2]));var l=i(this.hsv[0],this.hsv[1],this.hsv[2]);this.rgb[0]=l[0],this.rgb[1]=l[1],this.rgb[2]=l[2],this.exportColor(r)},this.fromString=function(t,e){var o;if(o=t.match(/^\W*([0-9A-F]{3}([0-9A-F]{3})?)\W*$/i))return 6===o[1].length?this.fromRGB(parseInt(o[1].substr(0,2),16),parseInt(o[1].substr(2,2),16),parseInt(o[1].substr(4,2),16),e):this.fromRGB(parseInt(o[1].charAt(0)+o[1].charAt(0),16),parseInt(o[1].charAt(1)+o[1].charAt(1),16),parseInt(o[1].charAt(2)+o[1].charAt(2),16),e),!0;if(o=t.match(/^\W*rgba?\(([^)]*)\)\W*$/i)){var n,i,r,s=o[1].split(","),l=/^\s*(\d*)(\.\d+)?\s*$/;if(s.length>=3&&(n=s[0].match(l))&&(i=s[1].match(l))&&(r=s[2].match(l))){var a=parseFloat((n[1]||"0")+(n[2]||"")),d=parseFloat((i[1]||"0")+(i[2]||"")),c=parseFloat((r[1]||"0")+(r[2]||""));return this.fromRGB(a,d,c,e),!0}}return!1},this.toString=function(){return(256|Math.round(this.rgb[0])).toString(16).substr(1)+(256|Math.round(this.rgb[1])).toString(16).substr(1)+(256|Math.round(this.rgb[2])).toString(16).substr(1)},this.toHEXString=function(){return"#"+this.toString().toUpperCase()},this.toRGBString=function(){return"rgb("+Math.round(this.rgb[0])+","+Math.round(this.rgb[1])+","+Math.round(this.rgb[2])+")"},this.isLight=function(){return.213*this.rgb[0]+.715*this.rgb[1]+.072*this.rgb[2]>127.5},this._processParentElementsInDOM=function(){if(!this._linkedElementsProcessed){this._linkedElementsProcessed=!0;var e=this.targetElement;do{var o=t.getStyle(e);o&&"fixed"===o.position.toLowerCase()&&(this.fixed=!0),e!==this.targetElement&&(e._jscEventsAttached||(t.attachEvent(e,"scroll",t.onParentScroll),e._jscEventsAttached=!0))}while((e=e.parentNode)&&!t.isElementType(e,"body"))}},"string"==typeof e){var p=e,u=document.getElementById(p);u?this.targetElement=u:t.warn("Could not find target element with ID '"+p+"'")}else e?this.targetElement=e:t.warn("Invalid target element: '"+e+"'");if(this.targetElement._jscLinkedInstance)return void t.warn("Cannot link jscolor twice to the same element. Skipping.");this.targetElement._jscLinkedInstance=this,this.valueElement=t.fetchElement(this.valueElement),this.styleElement=t.fetchElement(this.styleElement);var m=this,g=this.container?t.fetchElement(this.container):document.getElementsByTagName("body")[0],f=3;if(t.isElementType(this.targetElement,"button"))if(this.targetElement.onclick){var v=this.targetElement.onclick;this.targetElement.onclick=function(t){return v.call(this,t),!1}}else this.targetElement.onclick=function(){return!1};if(this.valueElement&&t.isElementType(this.valueElement,"input")){var y=function(){m.fromString(m.valueElement.value,t.leaveValue),t.dispatchFineChange(m)};t.attachEvent(this.valueElement,"keyup",y),t.attachEvent(this.valueElement,"input",y),t.attachEvent(this.valueElement,"blur",c),this.valueElement.setAttribute("autocomplete","off")}this.styleElement&&(this.styleElement._jscOrigStyle={backgroundImage:this.styleElement.style.backgroundImage,backgroundColor:this.styleElement.style.backgroundColor,color:this.styleElement.style.color}),this.value?this.fromString(this.value)||this.exportColor():this.importColor()}};return t.jscolor.lookupClass="jscolor",t.jscolor.installByClassName=function(e){var o=document.getElementsByTagName("input"),n=document.getElementsByTagName("button");t.tryInstallOnElements(o,e),t.tryInstallOnElements(n,e)},t.register(),t}),o("colorStop",["jscolor"],function(t){function e(t,e,o,n){this.gradient=t,this.position=e,this.color=o,this.size=n,this.domWidth=parseFloat(window.getComputedStyle(this.gradient.domElement).getPropertyValue("width")),this.domHeight=parseFloat(window.getComputedStyle(this.gradient.domElement).getPropertyValue("height")),
this.width=this.domHeight/(10-this.size),this.height=this.domHeight+.5*this.domHeight,this.addDomElement()}t.jscolor;return e.prototype.addDomElement=function(){var e=this,o=this.domWidth*this.position;o<0&&(o=0),o>this.domWidth-this.width&&(o=this.domWidth-this.width),this.square=document.createElement("div"),this.square.style.position="absolute",this.square.style.left=o+"px",this.square.style.bottom=-1-.25*this.domHeight+"px",this.square.style.width=this.width+"px",this.square.style.height=this.height+"px",this.square.style.borderRadius="20px",this.square.style.background=this.colorToString(),this.square.style.border="1px solid #111",this.square.style.cursor="pointer",this.cp=document.createElement("input"),this.cp.className='jscolor {position: "top", backgroundColor: "rgba(38, 38, 38, 0.75)", padding: 10}',this.cp.value=this.colorToString(),this.cp.style.width=0,this.cp.style.height=0,this.cp.style.margin=0,this.cp.style.padding=0,this.cp.style.border="None",this.square.ondblclick=function(t){this.children[0].jscolor.show(),this.children[0].jscolor.onFineChange=function(){e.color=[Math.round(this.rgb[0]),Math.round(this.rgb[1]),Math.round(this.rgb[2]),1],e.square.style.background=e.colorToString(),e.gradient.calculateGradient(),e.gradient.onChange.apply(e.gradient)}},this.square.onmouseover=function(t){e.hover=!0,e.gradient.hover=!0},this.square.onmousedown=function(t){e.drag=!0},this.gradient.domElement.addEventListener("mousemove",function(t){if(e.drag){var o=t.clientX-e.gradient.domElement.getBoundingClientRect().left-e.width/2;o<0&&(o=0),o>e.domWidth-e.width&&(o=e.domWidth-e.width),e.square.style.left=o+"px",e.position=o/(e.domWidth-e.width),e.gradient.calculateGradient(),e.gradient.onChange.apply(e.gradient)}}),window.addEventListener("mouseup",function(t){e.drag=!1}),this.square.onmouseout=function(t){e.hover=!1,e.gradient.hover=!1},this.square.append(this.cp),this.gradient.domElement.append(this.square),t.register()},e.prototype.colorToString=function(){return"rgba("+this.color[0]+", "+this.color[1]+", "+this.color[2]+", "+this.color[3]+")"},e}),o("Gradient",["colorStop"],function(t){function e(t,e){this.onChange=function(){};var o=this;this.domElement=t,this.colorStops=[],this.colorStopSize=e,this.createInitialColorStops(),this.calculateGradient(),this.domElement.onclick=function(t){if(!o.hover){var e=(t.clientX-this.getBoundingClientRect().left)/this.clientWidth;o.addColorStop(e,o.getColor(e))}},this.domElement.oncontextmenu=function(t){if(o.hover){for(var e,n=0;n<o.colorStops.length&&(e=o.colorStops[n],!e.hover);n++);o.colorStops.length>1&&(o.removeColorStop(t.toElement,e),o.hover=!1)}return!1}}return e.prototype.createInitialColorStops=function(){this.addColorStop(0,[255,0,0,1]),this.addColorStop(1,[172,0,0,1])},e.prototype.addColorStop=function(e,o){var n=new t(this,e,o,this.colorStopSize);this.colorStops.push(n)},e.prototype.removeColorStop=function(t,e){this.domElement.removeChild(t);var o=this.colorStops.indexOf(e);this.colorStops.splice(o,1),this.calculateGradient()},e.prototype.calculateGradient=function(){this.colorStops.sort(function(t,e){return t.position-e.position});var t,e="";for(t=0;t<this.colorStops.length;t++){var o=this.colorStops[t];e+=", "+o.colorToString()+" "+Math.round(1e4*o.position)/100+"%"}t>1?this.domElement.style.background="linear-gradient(to right"+e+")":(e=this.colorStops[0].colorToString(),this.domElement.style.background=e)},e.prototype.getColor=function(t){if(!(this.colorStops.length>1))return this.colorStops[0].color;for(var e=1;e<this.colorStops.length;e++){var o=this.colorStops[e-1],n=this.colorStops[e];if(t<=n.position&&t>=o.position){var i=(t-o.position)/(n.position-o.position);return this.getColorFormula(o.color,n.color,i)}}return t<this.colorStops[0].position?this.colorStops[0].color:t>this.colorStops[this.colorStops.length-1].position?this.colorStops[this.colorStops.length-1].color:void 0},e.prototype.getColorFormula=function(t,e,o){var n=o,i=2*n-1,r=(i/1+1)/2,s=1-r,l=[Math.round(e[0]*r+t[0]*s),Math.round(e[1]*r+t[1]*s),Math.round(e[2]*r+t[2]*s),1];return l},e.prototype.colorToString=function(){this.colorStops.sort(function(t,e){return t.position-e.position});var t,e="";for(t=0;t<this.colorStops.length;t++){var o=this.colorStops[t];e+=", "+o.colorToString()+" "+Math.round(1e4*o.position)/100+"%"}return t>1?"linear-gradient(to right"+e+")":e=this.colorStops[0].colorToString()},e}),o("main",["Gradient"],function(t){return t}),e("main")});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
